name: Release

on:
  workflow_run:
    workflows: ["Version"]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts and outputs from Version workflow
        uses: actions/github-script@v7
        id: fetch_outputs
        with:
          script: |
            const run_id = context.payload.workflow_run.id;
            const outputs = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id
            });
            return outputs.data;

      - name: Use outputs to determine if release is needed
        id: check_release
        run: |
          echo "Extracting outputs from Version workflow..."
          echo "new_release_published=${{ github.event.workflow_run.outputs.new_release_published }}"
          echo "new_release_git_tag=${{ github.event.workflow_run.outputs.new_release_git_tag }}"

          if [ "${{ github.event.workflow_run.outputs.new_release_published }}" != "true" ]; then
            echo "No new release published. Skipping GoReleaser."
            echo "skip_goreleaser=true" >> $GITHUB_OUTPUT
          else
            echo "New release detected: ${{ github.event.workflow_run.outputs.new_release_git_tag }}"
            echo "skip_goreleaser=false" >> $GITHUB_OUTPUT
            echo "tag_name=${{ github.event.workflow_run.outputs.new_release_git_tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code at the released commit
        if: steps.check_release.outputs.skip_goreleaser == 'false'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Set up Go
        if: steps.check_release.outputs.skip_goreleaser == 'false'
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Run GoReleaser
        if: steps.check_release.outputs.skip_goreleaser == 'false'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
